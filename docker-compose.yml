version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: restaurant_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: caravane_db
      POSTGRES_USER: caravane_user
      POSTGRES_PASSWORD: caravane_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - restaurant_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U caravane_user -d caravane_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Application
  api:
    build: .
    container_name: restaurant_api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://caravane_user:caravane_password@db:5432/caravane_db?schema=public
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-jwt-key-change-in-production}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      - GUIDINI_APP_KEY=${GUIDINI_APP_KEY}
      - GUIDINI_API_KEY=${GUIDINI_API_KEY}
      - ENVIRONMENT=production
    depends_on:
      db:
        condition: service_healthy
    networks:
      - restaurant_network
    volumes:
      - api_logs:/app/logs
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        echo 'Running database migrations...' &&
        prisma migrate deploy &&
        echo 'Starting API server...' &&
        uvicorn main:app --host 0.0.0.0 --port 8000
      "

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: restaurant_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - restaurant_network

volumes:
  postgres_data:
    driver: local
  api_logs:
    driver: local

networks:
  restaurant_network:
    driver: bridge
